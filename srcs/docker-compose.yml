version: "3.9"

services:
  nginx:
    container_name: nginx
    image: nginx
    restart: on-failure
    build: ./requirements/nginx/
    ports:
      - "443:443"
    volumes:
      - wordpress:/data/wordpress
    depends_on:
      - wordpress
    networks:
      - internal
  wordpress:
    container_name: wordpress
    image: wordpress
    restart: on-failure
    build:
      context: ./requirements/wordpress/
      dockerfile: Dockerfile
      args:
        - MYSQL_HOST=mariadb:3306
        - MYSQL_USER=${MYSQL_USER}
        - MYSQL_PASSWORD=${MYSQL_PASSWORD}
        - MYSQL_DATABASE=${MYSQL_DATABASE}
        - REDIS_HOST=redis
        - REDIS_PORT=6379
        - REDIS_PASS=${REDIS_PASS}
    volumes:
      - wordpress:/data/wordpress
    depends_on:
      - mariadb
      - redis
    networks:
      - internal
  mariadb:
    container_name: mariadb
    image: mariadb
    restart: on-failure
    build:
      context: ./requirements/mariadb/
      dockerfile: Dockerfile
      args:
        - MYSQL_USER=${MYSQL_USER}
        - MYSQL_PASSWORD=${MYSQL_PASSWORD}
        - MYSQL_DATABASE=${MYSQL_DATABASE}
        - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
    volumes:
      - mariadb:/var/lib/mysql
    networks:
      - internal
  # bonus
  redis:
    container_name: redis
    image: redis
    restart: on-failure
    build:
     context: ./bonus/redis/
     dockerfile: Dockerfile
     args:
        - REDIS_PASS=${REDIS_PASS}
    networks:
      - internal
  ftp:
    container_name: ftp
    image: ftp
    restart: on-failure
    build:
     context: ./bonus/ftp/
     dockerfile: Dockerfile
     args:
        - FTP_USER
        - FTP_PASS
    ports:
      - "21:21"
    volumes:
      - wordpress:/var/lib/ftp/
    depends_on:
      - wordpress
    networks:
      - internal
  website:
    container_name: website
    image: website
    restart: on-failure
    build:
     context: ./bonus/website/
     dockerfile: Dockerfile
    ports:
      - "1313:1313"
    networks:
      - internal
  adminer:
    container_name: adminer
    image: adminer
    restart: on-failure
    build:
     context: ./bonus/adminer/
     dockerfile: Dockerfile
    depends_on:
      - mariadb
    networks:
      - internal
  uptime-kuma:
    container_name: uptime-kuma
    image: uptime-kuma
    restart: on-failure
    build:
     context: ./bonus/uptime-kuma/
     dockerfile: Dockerfile
    ports:
      - "3001:3001"
    networks:
      - internal

volumes:
  wordpress:
    name: wordpress
    driver: local
    driver_opts:
      device: ${VOLUME_FOLDER}/wordpress
      o: bind
      type: none
  mariadb:
    name: mariadb
    driver: local
    driver_opts:
      device: ${VOLUME_FOLDER}/mariadb
      o: bind
      type: none

networks:
  internal:
    driver: bridge